# root/chart/aktus-ai-platform/apptest/schema.yaml

# Add top-level block to explicitly set version for testing
x-google-marketplace:
  # Match the main schema version
  publishedVersion: "1.0.3"

properties:
  name:
    type: string
    x-google-marketplace:
      type: NAME
  namespace:
    type: string
    x-google-marketplace:
      type: NAMESPACE
  serviceAccount:
    type: string
    title: Service Account
    x-google-marketplace:
      type: SERVICE_ACCOUNT
      serviceAccount:
        description: >
          GCP service account for the application. Needs permissions to manage secrets, configmaps, PVCs (Role provided).
        roles:
          - type: ClusterRole
            rulesType: PREDEFINED
            rulesFromRoleName: view
          - type: Role
            rulesType: CUSTOM
            rules:
              - apiGroups: [""]
                resources: ["secrets", "configmaps", "persistentvolumeclaims"]
                verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
  # Service account name to use throughout the application
  # This maps the serviceAccount from the marketplace test to our internal field
  serviceAccount.name:
    default: ${serviceAccount}
  
  # Core database credentials for testing - minimal set for verification
  aktusPostgres.username:
    type: string
    title: PostgreSQL Username
    description: Username for PostgreSQL database
    default: root
  
  aktusPostgres.password:
    type: string
    title: PostgreSQL Password
    description: Password for PostgreSQL database
    default: test-password
    x-google-marketplace:
      type: GENERATED_PASSWORD
      generatedPassword:
        length: 16
        includeSymbols: false
        base64: false
        
  aktusPostgres.database:
    type: string
    title: PostgreSQL Database
    description: Name of the PostgreSQL database
    default: root
    
  # Storage configurations
  aktusPostgres.persistence.size:
    type: string
    title: PostgreSQL Storage Size
    description: Size of the PostgreSQL persistent volume
    default: 50Gi

  # Minimal services for testing
  rabbitmq.enabled:
    type: boolean
    title: Enable RabbitMQ
    description: Enable RabbitMQ message broker
    default: true
  
  redis.enabled:
    type: boolean
    title: Enable Redis
    description: Enable Redis cache
    default: true
  
  # Only enable minimal services for verification
  aktus-database-service.enabled:
    type: boolean
    title: Enable Database Service
    description: Enable the database manager service
    default: true
    
  aktus-inference-service.enabled:
    type: boolean
    title: Enable Inference Service 
    default: false
    
  aktus-multimodal-data-ingestion-service.enabled:
    type: boolean
    title: Enable Multimodal Data Ingestion
    default: false
    
  aktus-embedding-service.enabled:
    type: boolean
    title: Enable Embedding Service
    default: false
    
  aktus-research-service.enabled:
    type: boolean
    title: Enable Research Service
    default: false
    
  # GCS storage bucket configurations
  aktusInference.storage.models.bucketName:
    type: string
    title: Models Storage Bucket
    description: GCS bucket name for storing ML models
    default: test-aktus-models
  
  aktusInference.storage.docUpload.bucketName:
    type: string
    title: Document Upload Bucket
    description: GCS bucket name for document uploads
    default: test-aktus-doc-upload
  
  aktusInference.storage.docProcessing.bucketName:
    type: string
    title: Document Processing Bucket
    description: GCS bucket name for document processing
    default: test-aktus-doc-proc
    
  aktusInference.storage.extractedData.bucketName:
    type: string
    title: Extracted Data Bucket
    description: GCS bucket name for extracted document data
    default: test-aktus-ext-data

  billing.enabled:
    type: boolean
    title: Enable Usage-Based Billing
    description: Enable tracking and reporting of usage metrics
    default: true
    
  billing.reportingSecret:
    type: string
    title: GCP Service Account Key for Billing
    description: Base64-encoded service account key for reporting usage metrics
    default: "ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAiYWt0dXMtYWktcGxhdGZvcm0tcHVibGljIiwKICAicHJpdmF0ZV9rZXlfaWQiOiAidGVzdC1rZXktaWQiLAogICJwcml2YXRlX2tleSI6ICItLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0tLS1cbnRlc3Qta2V5XG4tLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tIiwKICAiY2xpZW50X2VtYWlsIjogInRlc3RAYWt0dXMtYWktcGxhdGZvcm0tcHVibGljLmlhbS5nc2VydmljZWFjY291bnQuY29tIiwKICAiY2xpZW50X2lkIjogInRlc3QtaWQiLAogICJhdXRoX3VyaSI6ICJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvYXV0aCIsCiAgInRva2VuX3VyaSI6ICJodHRwczovL29hdXRoMi5nb29nbGVhcGlzLmNvbS90b2tlbiIsCiAgImF1dGhfcHJvdmlkZXJfeDUwOV9jZXJ0X3VybCI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9vYXV0aDIvdjEvY2VydHMiLAogICJjbGllbnRfeDUwOV9jZXJ0X3VybCI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9yb2JvdC92MS9tZXRhZGF0YS94NTA5L3Rlc3RAYWt0dXMtYWktcGxhdGZvcm0tcHVibGljLmlhbS5nc2VydmljZWFjY291bnQuY29tIgp9"
    x-google-marketplace:
      type: STRING
      
  billing.serviceName:
    type: string
    title: Billing Service Name
    description: Service name for usage tracking
    default: "aktus-ai-platform-test"
    
  billing.consumerId:
    type: string
    title: Billing Consumer ID
    description: Consumer ID for usage tracking (must start with 'project:')
    default: "project:aktus-ai-platform-public"
    pattern: ^project:.*$

  # API keys for external services
  secrets.openaiApiKey:
    type: string
    title: OpenAI API Key
    description: API key for OpenAI services
    default: dummy-key
    
  secrets.huggingfaceLoginKey:
    type: string
    title: Hugging Face Login Key
    description: Login key for accessing Hugging Face models
    default: dummy-key

required:
  - name
  - namespace
  - serviceAccount
  - aktusPostgres.username
  - aktusPostgres.password
  - aktusPostgres.database
  - aktusPostgres.persistence.size
  - rabbitmq.enabled
  - redis.enabled
  - aktus-inference-service.enabled
  - aktus-multimodal-data-ingestion-service.enabled
  - aktus-embedding-service.enabled
  - aktus-database-service.enabled
  - aktus-research-service.enabled
  - aktusInference.storage.models.bucketName
  - aktusInference.storage.docUpload.bucketName
  - aktusInference.storage.docProcessing.bucketName
  - aktusInference.storage.extractedData.bucketName
  - billing.enabled
  - billing.reportingSecret
  - billing.serviceName
  - billing.consumerId
  - secrets.openaiApiKey
  - secrets.huggingfaceLoginKey