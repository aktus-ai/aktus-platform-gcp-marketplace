# root/chart/aktus-ai-platform/apptest/schema.yaml

# Add top-level block to explicitly set version for testing
x-google-marketplace:
  # Match the main schema version
  publishedVersion: "1.0.0"

properties:
  name:
    type: string
    x-google-marketplace:
      type: NAME
  namespace:
    type: string
    x-google-marketplace:
      type: NAMESPACE
  serviceAccount:
    type: string
    title: Service Account
    x-google-marketplace:
      type: SERVICE_ACCOUNT
      serviceAccount:
        description: >
          GCP service account for the application. Needs permissions to manage secrets, configmaps, PVCs (Role provided).
        roles:
          - type: ClusterRole
            rulesType: PREDEFINED
            rulesFromRoleName: view
          - type: Role
            rulesType: CUSTOM
            rules:
              - apiGroups: [""]
                resources: ["secrets", "configmaps", "persistentvolumeclaims"]
                verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
  # Core database credentials for testing - minimal set for verification
  aktusPostgres.username:
    type: string
    title: PostgreSQL Username
    description: Username for PostgreSQL database
    default: root
  
  aktusPostgres.password:
    type: string
    title: PostgreSQL Password
    description: Password for PostgreSQL database
    default: test-password
    x-google-marketplace:
      type: GENERATED_PASSWORD
      generatedPassword:
        length: 16
        includeSymbols: false
        base64: false
        
  aktusPostgres.database:
    type: string
    title: PostgreSQL Database
    description: Name of the PostgreSQL database
    default: root
    
  # Storage configurations
  aktusPostgres.persistence.size:
    type: string
    title: PostgreSQL Storage Size
    description: Size of the PostgreSQL persistent volume
    default: 10Gi
  
  storage.chroma.size:
    type: string
    title: Vector Database Storage Size
    description: Size of the persistent volume for the vector database
    default: 10Gi

  # Minimal services for testing
  rabbitmq.enabled:
    type: boolean
    title: Enable RabbitMQ
    description: Enable RabbitMQ message broker
    default: true
  
  redis.enabled:
    type: boolean
    title: Enable Redis
    description: Enable Redis cache
    default: true
  
  # Only enable minimal services for verification
  aktus-database-service.enabled:
    type: boolean
    title: Enable Database Service
    description: Enable the database manager service
    default: true
    
  aktus-inference-service.enabled:
    type: boolean
    title: Enable Inference Service 
    default: false
    
  aktus-multimodal-data-ingestion-service.enabled:
    type: boolean
    title: Enable Multimodal Data Ingestion
    default: false
    
  aktus-embedding-service.enabled:
    type: boolean
    title: Enable Embedding Service
    default: false
    
  aktus-research-service.enabled:
    type: boolean
    title: Enable Research Service
    default: false
    
  # GCS storage bucket configurations
  aktusInference.storage.models.bucketName:
    type: string
    title: Models Storage Bucket
    description: GCS bucket name for storing ML models
    default: test-aktus-models
  
  aktusInference.storage.docUpload.bucketName:
    type: string
    title: Document Upload Bucket
    description: GCS bucket name for document uploads
    default: test-aktus-doc-upload
  
  aktusInference.storage.docProcessing.bucketName:
    type: string
    title: Document Processing Bucket
    description: GCS bucket name for document processing
    default: test-aktus-doc-proc
    
  aktusInference.storage.extractedData.bucketName:
    type: string
    title: Extracted Data Bucket
    description: GCS bucket name for extracted document data
    default: test-aktus-ext-data

  billing.enabled:
    type: boolean
    title: Enable Usage-Based Billing
    description: Enable tracking and reporting of usage metrics
    default: true
    
  # API keys for external services
  secrets.openaiApiKey:
    type: string
    title: OpenAI API Key
    description: API key for OpenAI services
    default: dummy-key
    
  secrets.huggingfaceLoginKey:
    type: string
    title: Hugging Face Login Key
    description: Login key for accessing Hugging Face models
    default: dummy-key

required:
  - name
  - namespace
  - serviceAccount
  - aktusPostgres.username
  - aktusPostgres.password
  - aktusPostgres.database
  - aktusPostgres.persistence.size
  - storage.chroma.size
  - rabbitmq.enabled
  - redis.enabled
  - aktus-inference-service.enabled
  - aktus-multimodal-data-ingestion-service.enabled
  - aktus-embedding-service.enabled
  - aktus-database-service.enabled
  - aktus-research-service.enabled
  - aktusInference.storage.models.bucketName
  - aktusInference.storage.docUpload.bucketName
  - aktusInference.storage.docProcessing.bucketName
  - aktusInference.storage.extractedData.bucketName
  - billing.enabled
  - secrets.openaiApiKey
  - secrets.huggingfaceLoginKey